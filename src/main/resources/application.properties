# Nome da Aplicação
spring.application.name=macro-measure

# ===============================================
# CONFIGURAÇÃO DO BANCO DE DADOS (DATASOURCE)
# ===============================================
# URL de conexão JDBC para o seu servidor Oracle
spring.datasource.url=${DB_URL}
# Usuário e Senha do banco de dados
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
# Especifica o nome da classe do Driver (boa prática)
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver

# ===============================================
# CONFIGURAÇÃO DO JPA/HIBERNATE
# ===============================================
# O Hibernate atualizara o schema do banco com base nas suas entidades.
# Outras opções: "create" (recria tudo), "validate", "none".
spring.jpa.hibernate.ddl-auto=validate

# Especifica o "dialeto" que o Hibernate deve usar para gerar o SQL.
spring.jpa.database-platform=org.hibernate.dialect.OracleDialect

# Configurações para logar o SQL no console
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# ===============================================
# CONFIGURAÇÃO DO SPRINGDOC (SWAGGER UI)
# ===============================================
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs
springdoc.openapi.info.title=Macro Measure API
springdoc.openapi.info.description=API REST para gerenciamento de medições de amostras patológicas da DASA.
springdoc.openapi.info.version=v0.0.1

# ===============================================
# CONFIGURAÇÃO DO FLYWAY
# ===============================================
# Permite que o Flyway estabeleça uma linha de base em um banco de dados existente.
spring.flyway.baseline-on-migrate=true

# ===============================================
# CONFIGURAÇÃO DO POOL DE CONEXÕES (HIKARI)
# ===============================================
# Define o número máximo de conexões que a aplicação pode manter abertas.
# Vamos reduzir para um valor baixo para evitar o erro de limite de sessões.
spring.datasource.hikari.maximum-pool-size=2

# Define o número mínimo de conexões ociosas a manter no pool.
spring.datasource.hikari.minimum-idle=1

# Tempo máximo (em ms) que a aplicação esperará por uma conexão.
spring.datasource.hikari.connection-timeout=30000
